<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="4"?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>rxjava-examples (0.0.2)</title>
<date>2018-07-08 10:34:55 UTC</date>
<author>
<personname>
<firstname>Maksim</firstname>
<surname>Kostromin</surname>
</personname>
<email>daggerok@gmail.com</email>
</author>
<authorinitials>MK</authorinitials>
<revhistory>
<revision>
<revnumber>0.0.2</revnumber>
<date>2018-07-08 10:34:55 UTC</date>
<authorinitials>MK</authorinitials>
</revision>
</revhistory>
</info>
<preface>
<title></title>
<simpara>Travis CI status:
<inlinemediaobject>
<imageobject>
<imagedata fileref="https://travis-ci.org/daggerok/rxjava-examples.svg?branch=master"/>
</imageobject>
<textobject><phrase>Build Status</phrase></textobject>
</inlinemediaobject></simpara>
</preface>
<chapter xml:id="introduction">
<title>Introduction</title>
<simpara>Read <link xl:href="https://daggerok.github.io/rxjava-examples">project reference documentation</link></simpara>
<simpara>projects</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>stock (rxjava reactive getting stated)</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>build</title>
<para>
<screen>./mvnw
./gradlew</screen>
</para>
</formalpara>
<simpara>inks:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><link xl:href="https://www.youtube.com/watch?v=Bs76JDSx1X4">talk</link></simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="implementation">
<title>Implementation</title>
<formalpara>
<title>build</title>
<para>
<programlisting language="kotlin" linenumbering="unnumbered">package daggerok

import io.reactivex.rxkotlin.subscribeBy
import io.reactivex.rxkotlin.toObservable

fun main(args: Array&lt;String&gt;) {
  val list = listOf("Alpha", "Beta", "Gamma", "Delta", "Epsilon")

  list.toObservable() // extension function for Iterables
      .filter { it.length &gt;= 5 }
      .subscribeBy(  // named arguments for lambda Subscribers
          onNext = { println(it) },
          onError = { it.printStackTrace() },
          onComplete = { println("Done!") }
      )
}</programlisting>
</para>
</formalpara>
<simpara>Initially generated by using <link xl:href="https://github.com/daggerok/generator-jvm/">generator-jvm</link> yeoman generator (kotlin)</simpara>
<section xml:id="reactivex-api">
<title>reactivex-api</title>
<formalpara>
<title>build</title>
<para>
<programlisting language="java" linenumbering="unnumbered">@Slf4j
public class App {
  public static void main(String[] args) {
    Flowable.just("ololo", "trololo")
            .subscribe(log::info);
  }
}</programlisting>
</para>
</formalpara>
<formalpara>
<title>api</title>
<para>
<screen>Flowable | Publisher | Subscriber
Maybe | MaybeSource | MaybeObserver
Completable | CompletableSource | CompletableObserver

Observable | ObservableSource | Observer
Observers
Operations
Schedule
Single | SingleSource | SingleObserver
Subject</screen>
</para>
</formalpara>
<simpara>Initially generated by using <link xl:href="https://github.com/daggerok/generator-jvm/">generator-jvm</link> yeoman generator (java)</simpara>
</section>
<section xml:id="javaee-starter">
<title>javaee-starter</title>
<formalpara>
<title>build</title>
<para>
<screen>./mvnw -pl javaee-starter clean package com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
./mvnw -pl javaee-starter com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down

./gradlew clean build :javaee-starter:composeUp
./gradlew :javaee-starter:composeDown</screen>
</para>
</formalpara>
</section>
<section xml:id="starter">
<title>starter</title>
<formalpara>
<title>build</title>
<para>
<screen>./mvnw -pl javaee-starter clean package com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
./mvnw -pl javaee-starter com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down

./gradlew clean build :javaee-starter:composeUp
./gradlew :javaee-starter:composeDown</screen>
</para>
</formalpara>
</section>
<section xml:id="stock">
<title>stock</title>
<formalpara>
<title>build</title>
<para>
<screen>./mvnw -pl javaee-starter clean package com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
./mvnw -pl javaee-starter com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down

./gradlew clean build :javaee-starter:composeUp
./gradlew :javaee-starter:composeDown</screen>
</para>
</formalpara>
</section>
</chapter>
<chapter xml:id="links">
<title>Links</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://github.com/daggerok/rxjava-examples">GitHub repo</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://daggerok.github.io/rxjava-examples">GitHub pages</link></simpara>
</listitem>
</itemizedlist>
</chapter>
</book>